{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","length","categories","type","value","onChange","target","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","image","key","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACRC,mBAAS,IADD,mBACrCC,EADqC,KACzBC,EADyB,KAc5C,OACI,0BAAMC,SARW,SAACC,GAClBA,EAAEC,iBACuB,IAAtBJ,EAAWK,SACdP,GAAc,SAACQ,GAAD,OAAiBN,GAAjB,mBAAgCM,OAC9CL,EAAc,OAKV,2BAAOM,KAAK,OAAOC,MAAOR,EAAYS,SAbrB,SAACN,GACtBF,EAAcE,EAAEO,OAAOF,YCLlBG,EAAc,SAAC,GAAqB,EAApBC,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IACpC,OACI,yBAAKC,UAAU,0CACX,yBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,2BAAIA,K,uBCNHK,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbN,EADa,iDACmCO,UAAUF,GAD7C,+DAEAG,MAAMR,GAFN,cAEbS,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KACDC,EAAOD,EAAKE,KAAK,SAAAC,GACnB,MAAO,CACHhB,GAAIgB,EAAIhB,GACRC,MAAOe,EAAIf,MACXC,IAAKc,EAAIC,OAAOC,iBAAiBhB,QARtB,kBAWZY,GAXY,4CAAH,sDCIPK,EAAU,SAAC,GAAgB,IAAfZ,EAAc,EAAdA,SAAc,ECDX,SAACA,GAAc,IAAD,EACZpB,mBAAS,CAC/B0B,KAAM,GACNO,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAetC,OATAC,qBAAU,WACNjB,EAAQC,GAAUiB,MAAM,SAAAP,GACpBK,EAAU,CACNT,KAAMI,EACNG,SAAS,SAGlB,CAACb,IAEGc,EDbwBI,CAAalB,GAAhCU,EADuB,EAC5BJ,KAAaO,EADe,EACfA,QAEpB,OACI,oCACI,wBAAIjB,UAAU,qCAAqCI,GAClDa,GAAW,uBAAGjB,UAAU,oCAAb,WACZ,wBAAIA,UAAU,aACTc,EAAOF,KAAK,SAACW,GAAD,OAAW,kBAAC,EAAD,eAAaC,IAAKD,EAAM1B,IAAQ0B,UEazDE,EArBM,WAAM,IAAD,EAEczC,mBAAS,CAAC,cAFxB,mBAEfO,EAFe,KAEHR,EAFG,KAMtB,OACI,oCACI,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BACA,4BAEQQ,EAAWqB,KAAI,SAACR,GAAD,OAAc,kBAAC,EAAD,CAASoB,IAAKpB,EAAUA,SAAUA,U,MCZnFsB,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.1aa5dbff.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputValue = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(inputValue.length === 0) return;\r\n        setCategories((categories) => [inputValue, ...categories]);\r\n        setInputValue('');\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input type=\"text\" value={inputValue} onChange={handleInputValue}/>\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n};\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","export const getGifs = async(category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=waTzC4iNOCVpGIkJl1hMUbCv5vpGvr67`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n        }\r\n    });\r\n    return gifs;\r\n}","import React/* , { useState, useEffect } */ from 'react'\r\nimport { GifGridItem } from './GifGridItem';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nexport const GifGrid = ({category}) => {\r\n    const {data:images, loading} = useFetchGifs(category);\r\n    \r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n            {loading && <p className=\"animate__animated animate__flash\">Loading</p>}\r\n            <ol className=\"card-grid\">\r\n                {images.map( (image) => <GifGridItem key={image.id} {...image}/>)}\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs(category).then( images => {\r\n            setState( {\r\n                data: images,\r\n                loading: false\r\n            });\r\n        });\r\n    }, [category]);\r\n\r\n    return state;\r\n}","import React, {useState} from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = () =>{\r\n\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n    /* const handleAdd = () =>{\r\n        setCategories( categories => [...categories, 'Bleach']);\r\n    }; */\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr/>\r\n            <ol>\r\n                {\r\n                    categories.map((category) => <GifGrid key={category} category={category}/>)\r\n                }\r\n            </ol>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}